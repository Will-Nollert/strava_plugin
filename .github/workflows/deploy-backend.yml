name: Deploy Backend

on:
  push:
    branches:
      - main
    paths:
      - "backend/**"
      - ".github/workflows/deploy-backend.yml"
      
permissions:
  contents: read
  pull-requests: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Python for SAM CLI
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install SAM CLI
        run: |
          pip install aws-sam-cli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci --production

      - name: Build with SAM
        run: |
          cd backend
          sam build --use-container

      - name: Roll back failed stack if needed
        run: |
          STACK_STATUS=$(aws cloudformation describe-stacks --stack-name strava-plugin-oauth-proxy --query "Stacks[0].StackStatus" --output text || echo "DOES_NOT_EXIST")
              if [ "$STACK_STATUS" = "UPDATE_FAILED" ]; then
                echo "Rolling back failed stack..."
                aws cloudformation rollback-stack --stack-name strava-plugin-oauth-proxy
                echo "Waiting for rollback to complete..."
                aws cloudformation wait stack-rollback-complete --stack-name strava-plugin-oauth-proxy
              fi

      - name: Deploy with SAM
        run: |
          cd backend
          sam deploy \
            --template-file template.yaml \
            --stack-name strava-plugin-oauth-proxy \
            --capabilities CAPABILITY_IAM \
            --no-confirm-changeset \
            --parameter-overrides "StravaClientSecret=${{ secrets.STRAVA_CLIENT_SECRET }}" \
            --resolve-s3

      - name: Get API Gateway URL
        id: get-api-url
        run: |
          API_URL=$(aws cloudformation describe-stacks \
            --stack-name strava-plugin-oauth-proxy \
            --query "Stacks[0].Outputs[?OutputKey=='ApiEndpoint'].OutputValue" \
            --output text)
          echo "API_URL=$API_URL" >> $GITHUB_ENV
          echo "::set-output name=api-url::$API_URL"

      - name: Update API URL secret
        run: |
          echo "Updating AUTH_PROXY_URL secret with: ${{ steps.get-api-url.outputs.api-url }}"
          # GitHub CLI to update the secret
          echo "${{ steps.get-api-url.outputs.api-url }}" | gh secret set AUTH_PROXY_URL
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN_SECRETS }}
